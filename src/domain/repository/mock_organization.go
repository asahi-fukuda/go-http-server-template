// Code generated by MockGen. DO NOT EDIT.
// Source: organization.go

// Package repository is a generated GoMock package.
package repository

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/myuoncorp/go-http-server-template/domain/model"
)

// MockOrganizationRepository is a mock of OrganizationRepository interface.
type MockOrganizationRepository struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationRepositoryMockRecorder
}

// MockOrganizationRepositoryMockRecorder is the mock recorder for MockOrganizationRepository.
type MockOrganizationRepositoryMockRecorder struct {
	mock *MockOrganizationRepository
}

// NewMockOrganizationRepository creates a new mock instance.
func NewMockOrganizationRepository(ctrl *gomock.Controller) *MockOrganizationRepository {
	mock := &MockOrganizationRepository{ctrl: ctrl}
	mock.recorder = &MockOrganizationRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationRepository) EXPECT() *MockOrganizationRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockOrganizationRepository) Get(ctx context.Context) (*model.Organization, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx)
	ret0, _ := ret[0].(*model.Organization)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockOrganizationRepositoryMockRecorder) Get(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockOrganizationRepository)(nil).Get), ctx)
}

// List mocks base method.
func (m *MockOrganizationRepository) List(ctx context.Context) ([]*model.Organization, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx)
	ret0, _ := ret[0].([]*model.Organization)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockOrganizationRepositoryMockRecorder) List(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockOrganizationRepository)(nil).List), ctx)
}
